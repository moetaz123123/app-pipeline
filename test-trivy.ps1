# Script de test Trivy pour diagnostiquer les probl√®mes dans Jenkins
Write-Host "üîç Diagnostic Trivy pour Jenkins..." -ForegroundColor Green

# Chemin vers Trivy
$TRIVY_PATH = "C:\Users\User\Downloads\trivy_0.63.0_windows-64bit\trivy.exe"

# Test 1: V√©rifier si Trivy existe
Write-Host "`n1. V√©rification de l'existence de Trivy..." -ForegroundColor Yellow
if (Test-Path $TRIVY_PATH) {
    Write-Host "‚úÖ Trivy trouv√©: $TRIVY_PATH" -ForegroundColor Green
} else {
    Write-Host "‚ùå Trivy non trouv√© √†: $TRIVY_PATH" -ForegroundColor Red
    exit 1
}

# Test 2: V√©rifier la version de Trivy
Write-Host "`n2. V√©rification de la version Trivy..." -ForegroundColor Yellow
try {
    $version = & $TRIVY_PATH version
    Write-Host "‚úÖ Version Trivy: $version" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Impossible d'obtenir la version Trivy" -ForegroundColor Red
    Write-Host "Erreur: $_" -ForegroundColor Red
}

# Test 3: V√©rifier le r√©pertoire de travail
Write-Host "`n3. V√©rification du r√©pertoire de travail..." -ForegroundColor Yellow
$currentDir = Get-Location
Write-Host "üìÅ R√©pertoire actuel: $currentDir" -ForegroundColor Cyan

# Test 4: V√©rifier les permissions
Write-Host "`n4. V√©rification des permissions..." -ForegroundColor Yellow
try {
    $testFile = "test-trivy-permissions.txt"
    "Test de permissions" | Out-File -FilePath $testFile -Encoding UTF8
    if (Test-Path $testFile) {
        Write-Host "‚úÖ Permissions d'√©criture OK" -ForegroundColor Green
        Remove-Item $testFile
    }
} catch {
    Write-Host "‚ùå Probl√®me de permissions d'√©criture" -ForegroundColor Red
}

# Test 5: Test de connectivit√© r√©seau
Write-Host "`n5. Test de connectivit√© r√©seau..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "https://mirror.gcr.io" -TimeoutSec 10 -UseBasicParsing
    Write-Host "‚úÖ Connectivit√© vers mirror.gcr.io OK" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Probl√®me de connectivit√© vers mirror.gcr.io" -ForegroundColor Red
    Write-Host "Erreur: $_" -ForegroundColor Red
}

# Test 6: Test de t√©l√©chargement de la base de donn√©es
Write-Host "`n6. Test de t√©l√©chargement de la base de donn√©es..." -ForegroundColor Yellow
try {
    Write-Host "Tentative de t√©l√©chargement de la base de donn√©es..."
    & $TRIVY_PATH image --download-db-only --timeout 60s
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Base de donn√©es t√©l√©charg√©e avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "‚ùå √âchec du t√©l√©chargement de la base de donn√©es" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erreur lors du t√©l√©chargement de la base de donn√©es" -ForegroundColor Red
    Write-Host "Erreur: $_" -ForegroundColor Red
}

# Test 7: Test de scan simple
Write-Host "`n7. Test de scan simple..." -ForegroundColor Yellow
try {
    $testReport = "test-trivy-scan.txt"
    Write-Host "Lancement d'un scan de test..."
    & $TRIVY_PATH fs . --skip-files vendor/ --format table --output $testReport --timeout 30s
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Scan de test r√©ussi" -ForegroundColor Green
        if (Test-Path $testReport) {
            Write-Host "üìÑ Rapport de test g√©n√©r√©: $testReport" -ForegroundColor Cyan
            $content = Get-Content $testReport -Raw
            Write-Host "Contenu du rapport:" -ForegroundColor Yellow
            Write-Host $content -ForegroundColor White
            Remove-Item $testReport
        } else {
            Write-Host "‚ö†Ô∏è Scan r√©ussi mais fichier de rapport non trouv√©" -ForegroundColor Yellow
        }
    } else {
        Write-Host "‚ùå Scan de test √©chou√©" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erreur lors du scan de test" -ForegroundColor Red
    Write-Host "Erreur: $_" -ForegroundColor Red
}

# Test 8: Test avec le chemin exact du workspace Jenkins
Write-Host "`n8. Test avec le workspace Jenkins simul√©..." -ForegroundColor Yellow
$jenkinsWorkspace = "C:\ProgramData\Jenkins\.jenkins\workspace\pipeline-laravel"
if (Test-Path $jenkinsWorkspace) {
    Write-Host "üìÅ Workspace Jenkins trouv√©: $jenkinsWorkspace" -ForegroundColor Green
    try {
        $testReport = "$jenkinsWorkspace\test-jenkins-scan.txt"
        Write-Host "Test de scan dans le workspace Jenkins..."
        & $TRIVY_PATH fs $jenkinsWorkspace --skip-files vendor/ --format table --output $testReport --timeout 30s
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Scan dans workspace Jenkins r√©ussi" -ForegroundColor Green
            if (Test-Path $testReport) {
                Remove-Item $testReport
            }
        } else {
            Write-Host "‚ùå Scan dans workspace Jenkins √©chou√©" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå Erreur lors du scan dans workspace Jenkins" -ForegroundColor Red
    }
} else {
    Write-Host "‚ö†Ô∏è Workspace Jenkins non trouv√©: $jenkinsWorkspace" -ForegroundColor Yellow
}

Write-Host "`nüéâ Diagnostic Trivy termin√©!" -ForegroundColor Green
Write-Host "üí° V√©rifiez les r√©sultats ci-dessus pour identifier les probl√®mes potentiels" -ForegroundColor Cyan 